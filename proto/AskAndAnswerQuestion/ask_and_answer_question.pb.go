// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ask_and_answer_question.proto

package ask_and_answer_question

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AskQuestionRequest struct {
	Num                  string   `protobuf:"bytes,1,opt,name=num,proto3" json:"num,omitempty"`
	Question             string   `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AskQuestionRequest) Reset()         { *m = AskQuestionRequest{} }
func (m *AskQuestionRequest) String() string { return proto.CompactTextString(m) }
func (*AskQuestionRequest) ProtoMessage()    {}
func (*AskQuestionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ask_and_answer_question_ee8a2420c5eac81b, []int{0}
}
func (m *AskQuestionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AskQuestionRequest.Unmarshal(m, b)
}
func (m *AskQuestionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AskQuestionRequest.Marshal(b, m, deterministic)
}
func (dst *AskQuestionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AskQuestionRequest.Merge(dst, src)
}
func (m *AskQuestionRequest) XXX_Size() int {
	return xxx_messageInfo_AskQuestionRequest.Size(m)
}
func (m *AskQuestionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AskQuestionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AskQuestionRequest proto.InternalMessageInfo

func (m *AskQuestionRequest) GetNum() string {
	if m != nil {
		return m.Num
	}
	return ""
}

func (m *AskQuestionRequest) GetQuestion() string {
	if m != nil {
		return m.Question
	}
	return ""
}

type AskQuestionReply struct {
	Message              bool     `protobuf:"varint,3,opt,name=message,proto3" json:"message,omitempty"`
	Result               string   `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AskQuestionReply) Reset()         { *m = AskQuestionReply{} }
func (m *AskQuestionReply) String() string { return proto.CompactTextString(m) }
func (*AskQuestionReply) ProtoMessage()    {}
func (*AskQuestionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ask_and_answer_question_ee8a2420c5eac81b, []int{1}
}
func (m *AskQuestionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AskQuestionReply.Unmarshal(m, b)
}
func (m *AskQuestionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AskQuestionReply.Marshal(b, m, deterministic)
}
func (dst *AskQuestionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AskQuestionReply.Merge(dst, src)
}
func (m *AskQuestionReply) XXX_Size() int {
	return xxx_messageInfo_AskQuestionReply.Size(m)
}
func (m *AskQuestionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AskQuestionReply.DiscardUnknown(m)
}

var xxx_messageInfo_AskQuestionReply proto.InternalMessageInfo

func (m *AskQuestionReply) GetMessage() bool {
	if m != nil {
		return m.Message
	}
	return false
}

func (m *AskQuestionReply) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type BrowseQuestionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrowseQuestionRequest) Reset()         { *m = BrowseQuestionRequest{} }
func (m *BrowseQuestionRequest) String() string { return proto.CompactTextString(m) }
func (*BrowseQuestionRequest) ProtoMessage()    {}
func (*BrowseQuestionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ask_and_answer_question_ee8a2420c5eac81b, []int{2}
}
func (m *BrowseQuestionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrowseQuestionRequest.Unmarshal(m, b)
}
func (m *BrowseQuestionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrowseQuestionRequest.Marshal(b, m, deterministic)
}
func (dst *BrowseQuestionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrowseQuestionRequest.Merge(dst, src)
}
func (m *BrowseQuestionRequest) XXX_Size() int {
	return xxx_messageInfo_BrowseQuestionRequest.Size(m)
}
func (m *BrowseQuestionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BrowseQuestionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BrowseQuestionRequest proto.InternalMessageInfo

type BrowseQuestionReply struct {
	Question             []string `protobuf:"bytes,1,rep,name=question,proto3" json:"question,omitempty"`
	Message              bool     `protobuf:"varint,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               string   `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrowseQuestionReply) Reset()         { *m = BrowseQuestionReply{} }
func (m *BrowseQuestionReply) String() string { return proto.CompactTextString(m) }
func (*BrowseQuestionReply) ProtoMessage()    {}
func (*BrowseQuestionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ask_and_answer_question_ee8a2420c5eac81b, []int{3}
}
func (m *BrowseQuestionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrowseQuestionReply.Unmarshal(m, b)
}
func (m *BrowseQuestionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrowseQuestionReply.Marshal(b, m, deterministic)
}
func (dst *BrowseQuestionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrowseQuestionReply.Merge(dst, src)
}
func (m *BrowseQuestionReply) XXX_Size() int {
	return xxx_messageInfo_BrowseQuestionReply.Size(m)
}
func (m *BrowseQuestionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BrowseQuestionReply.DiscardUnknown(m)
}

var xxx_messageInfo_BrowseQuestionReply proto.InternalMessageInfo

func (m *BrowseQuestionReply) GetQuestion() []string {
	if m != nil {
		return m.Question
	}
	return nil
}

func (m *BrowseQuestionReply) GetMessage() bool {
	if m != nil {
		return m.Message
	}
	return false
}

func (m *BrowseQuestionReply) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type AnswerQuestionRequest struct {
	Question             string   `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	Answer               string   `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
	Answerer             string   `protobuf:"bytes,3,opt,name=answerer,proto3" json:"answerer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnswerQuestionRequest) Reset()         { *m = AnswerQuestionRequest{} }
func (m *AnswerQuestionRequest) String() string { return proto.CompactTextString(m) }
func (*AnswerQuestionRequest) ProtoMessage()    {}
func (*AnswerQuestionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ask_and_answer_question_ee8a2420c5eac81b, []int{4}
}
func (m *AnswerQuestionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnswerQuestionRequest.Unmarshal(m, b)
}
func (m *AnswerQuestionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnswerQuestionRequest.Marshal(b, m, deterministic)
}
func (dst *AnswerQuestionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnswerQuestionRequest.Merge(dst, src)
}
func (m *AnswerQuestionRequest) XXX_Size() int {
	return xxx_messageInfo_AnswerQuestionRequest.Size(m)
}
func (m *AnswerQuestionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AnswerQuestionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AnswerQuestionRequest proto.InternalMessageInfo

func (m *AnswerQuestionRequest) GetQuestion() string {
	if m != nil {
		return m.Question
	}
	return ""
}

func (m *AnswerQuestionRequest) GetAnswer() string {
	if m != nil {
		return m.Answer
	}
	return ""
}

func (m *AnswerQuestionRequest) GetAnswerer() string {
	if m != nil {
		return m.Answerer
	}
	return ""
}

type AnswerQuestionReply struct {
	Message              bool     `protobuf:"varint,1,opt,name=message,proto3" json:"message,omitempty"`
	Result               string   `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnswerQuestionReply) Reset()         { *m = AnswerQuestionReply{} }
func (m *AnswerQuestionReply) String() string { return proto.CompactTextString(m) }
func (*AnswerQuestionReply) ProtoMessage()    {}
func (*AnswerQuestionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ask_and_answer_question_ee8a2420c5eac81b, []int{5}
}
func (m *AnswerQuestionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnswerQuestionReply.Unmarshal(m, b)
}
func (m *AnswerQuestionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnswerQuestionReply.Marshal(b, m, deterministic)
}
func (dst *AnswerQuestionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnswerQuestionReply.Merge(dst, src)
}
func (m *AnswerQuestionReply) XXX_Size() int {
	return xxx_messageInfo_AnswerQuestionReply.Size(m)
}
func (m *AnswerQuestionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AnswerQuestionReply.DiscardUnknown(m)
}

var xxx_messageInfo_AnswerQuestionReply proto.InternalMessageInfo

func (m *AnswerQuestionReply) GetMessage() bool {
	if m != nil {
		return m.Message
	}
	return false
}

func (m *AnswerQuestionReply) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type DetailedListRequest struct {
	Question             string   `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetailedListRequest) Reset()         { *m = DetailedListRequest{} }
func (m *DetailedListRequest) String() string { return proto.CompactTextString(m) }
func (*DetailedListRequest) ProtoMessage()    {}
func (*DetailedListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ask_and_answer_question_ee8a2420c5eac81b, []int{6}
}
func (m *DetailedListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetailedListRequest.Unmarshal(m, b)
}
func (m *DetailedListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetailedListRequest.Marshal(b, m, deterministic)
}
func (dst *DetailedListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetailedListRequest.Merge(dst, src)
}
func (m *DetailedListRequest) XXX_Size() int {
	return xxx_messageInfo_DetailedListRequest.Size(m)
}
func (m *DetailedListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DetailedListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DetailedListRequest proto.InternalMessageInfo

func (m *DetailedListRequest) GetQuestion() string {
	if m != nil {
		return m.Question
	}
	return ""
}

type DetailedListReply struct {
	Detailedlist         []*DetailedList `protobuf:"bytes,1,rep,name=detailedlist,proto3" json:"detailedlist,omitempty"`
	Message              bool            `protobuf:"varint,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               string          `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DetailedListReply) Reset()         { *m = DetailedListReply{} }
func (m *DetailedListReply) String() string { return proto.CompactTextString(m) }
func (*DetailedListReply) ProtoMessage()    {}
func (*DetailedListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ask_and_answer_question_ee8a2420c5eac81b, []int{7}
}
func (m *DetailedListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetailedListReply.Unmarshal(m, b)
}
func (m *DetailedListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetailedListReply.Marshal(b, m, deterministic)
}
func (dst *DetailedListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetailedListReply.Merge(dst, src)
}
func (m *DetailedListReply) XXX_Size() int {
	return xxx_messageInfo_DetailedListReply.Size(m)
}
func (m *DetailedListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DetailedListReply.DiscardUnknown(m)
}

var xxx_messageInfo_DetailedListReply proto.InternalMessageInfo

func (m *DetailedListReply) GetDetailedlist() []*DetailedList {
	if m != nil {
		return m.Detailedlist
	}
	return nil
}

func (m *DetailedListReply) GetMessage() bool {
	if m != nil {
		return m.Message
	}
	return false
}

func (m *DetailedListReply) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type DetailedList struct {
	Question             string   `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	Questioner           string   `protobuf:"bytes,2,opt,name=questioner,proto3" json:"questioner,omitempty"`
	Answer               string   `protobuf:"bytes,3,opt,name=answer,proto3" json:"answer,omitempty"`
	Answerer             string   `protobuf:"bytes,4,opt,name=answerer,proto3" json:"answerer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetailedList) Reset()         { *m = DetailedList{} }
func (m *DetailedList) String() string { return proto.CompactTextString(m) }
func (*DetailedList) ProtoMessage()    {}
func (*DetailedList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ask_and_answer_question_ee8a2420c5eac81b, []int{8}
}
func (m *DetailedList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetailedList.Unmarshal(m, b)
}
func (m *DetailedList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetailedList.Marshal(b, m, deterministic)
}
func (dst *DetailedList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetailedList.Merge(dst, src)
}
func (m *DetailedList) XXX_Size() int {
	return xxx_messageInfo_DetailedList.Size(m)
}
func (m *DetailedList) XXX_DiscardUnknown() {
	xxx_messageInfo_DetailedList.DiscardUnknown(m)
}

var xxx_messageInfo_DetailedList proto.InternalMessageInfo

func (m *DetailedList) GetQuestion() string {
	if m != nil {
		return m.Question
	}
	return ""
}

func (m *DetailedList) GetQuestioner() string {
	if m != nil {
		return m.Questioner
	}
	return ""
}

func (m *DetailedList) GetAnswer() string {
	if m != nil {
		return m.Answer
	}
	return ""
}

func (m *DetailedList) GetAnswerer() string {
	if m != nil {
		return m.Answerer
	}
	return ""
}

func init() {
	proto.RegisterType((*AskQuestionRequest)(nil), "ask_and_answer_question.AskQuestionRequest")
	proto.RegisterType((*AskQuestionReply)(nil), "ask_and_answer_question.AskQuestionReply")
	proto.RegisterType((*BrowseQuestionRequest)(nil), "ask_and_answer_question.BrowseQuestionRequest")
	proto.RegisterType((*BrowseQuestionReply)(nil), "ask_and_answer_question.BrowseQuestionReply")
	proto.RegisterType((*AnswerQuestionRequest)(nil), "ask_and_answer_question.AnswerQuestionRequest")
	proto.RegisterType((*AnswerQuestionReply)(nil), "ask_and_answer_question.AnswerQuestionReply")
	proto.RegisterType((*DetailedListRequest)(nil), "ask_and_answer_question.DetailedListRequest")
	proto.RegisterType((*DetailedListReply)(nil), "ask_and_answer_question.DetailedListReply")
	proto.RegisterType((*DetailedList)(nil), "ask_and_answer_question.DetailedList")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	AskQuestion(ctx context.Context, in *AskQuestionRequest, opts ...grpc.CallOption) (*AskQuestionReply, error)
	BrowseQuestion(ctx context.Context, in *BrowseQuestionRequest, opts ...grpc.CallOption) (*BrowseQuestionReply, error)
	AnswerQuestion(ctx context.Context, in *AnswerQuestionRequest, opts ...grpc.CallOption) (*AnswerQuestionReply, error)
	DetailedList(ctx context.Context, in *DetailedListRequest, opts ...grpc.CallOption) (*DetailedListReply, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) AskQuestion(ctx context.Context, in *AskQuestionRequest, opts ...grpc.CallOption) (*AskQuestionReply, error) {
	out := new(AskQuestionReply)
	err := c.cc.Invoke(ctx, "/ask_and_answer_question.Greeter/AskQuestion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) BrowseQuestion(ctx context.Context, in *BrowseQuestionRequest, opts ...grpc.CallOption) (*BrowseQuestionReply, error) {
	out := new(BrowseQuestionReply)
	err := c.cc.Invoke(ctx, "/ask_and_answer_question.Greeter/BrowseQuestion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) AnswerQuestion(ctx context.Context, in *AnswerQuestionRequest, opts ...grpc.CallOption) (*AnswerQuestionReply, error) {
	out := new(AnswerQuestionReply)
	err := c.cc.Invoke(ctx, "/ask_and_answer_question.Greeter/AnswerQuestion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) DetailedList(ctx context.Context, in *DetailedListRequest, opts ...grpc.CallOption) (*DetailedListReply, error) {
	out := new(DetailedListReply)
	err := c.cc.Invoke(ctx, "/ask_and_answer_question.Greeter/DetailedList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	AskQuestion(context.Context, *AskQuestionRequest) (*AskQuestionReply, error)
	BrowseQuestion(context.Context, *BrowseQuestionRequest) (*BrowseQuestionReply, error)
	AnswerQuestion(context.Context, *AnswerQuestionRequest) (*AnswerQuestionReply, error)
	DetailedList(context.Context, *DetailedListRequest) (*DetailedListReply, error)
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_AskQuestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AskQuestionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).AskQuestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ask_and_answer_question.Greeter/AskQuestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).AskQuestion(ctx, req.(*AskQuestionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_BrowseQuestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BrowseQuestionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).BrowseQuestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ask_and_answer_question.Greeter/BrowseQuestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).BrowseQuestion(ctx, req.(*BrowseQuestionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_AnswerQuestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AnswerQuestionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).AnswerQuestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ask_and_answer_question.Greeter/AnswerQuestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).AnswerQuestion(ctx, req.(*AnswerQuestionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_DetailedList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetailedListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).DetailedList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ask_and_answer_question.Greeter/DetailedList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).DetailedList(ctx, req.(*DetailedListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ask_and_answer_question.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AskQuestion",
			Handler:    _Greeter_AskQuestion_Handler,
		},
		{
			MethodName: "BrowseQuestion",
			Handler:    _Greeter_BrowseQuestion_Handler,
		},
		{
			MethodName: "AnswerQuestion",
			Handler:    _Greeter_AnswerQuestion_Handler,
		},
		{
			MethodName: "DetailedList",
			Handler:    _Greeter_DetailedList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ask_and_answer_question.proto",
}

func init() {
	proto.RegisterFile("ask_and_answer_question.proto", fileDescriptor_ask_and_answer_question_ee8a2420c5eac81b)
}

var fileDescriptor_ask_and_answer_question_ee8a2420c5eac81b = []byte{
	// 404 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xd1, 0x6a, 0xf2, 0x30,
	0x14, 0xc7, 0xad, 0x15, 0xf5, 0x3b, 0xca, 0x87, 0x8b, 0x38, 0x8b, 0xb0, 0x21, 0x81, 0x81, 0xdb,
	0xa4, 0x30, 0xf7, 0x04, 0x8a, 0x20, 0x83, 0xdd, 0xcc, 0x17, 0x90, 0x4e, 0x0f, 0xa5, 0xb3, 0xb6,
	0x5d, 0x52, 0x71, 0xde, 0xec, 0x19, 0xf6, 0x4c, 0x7b, 0xb2, 0xd1, 0x1a, 0x4b, 0xd2, 0x19, 0x29,
	0xbb, 0xcb, 0x49, 0x72, 0xce, 0xef, 0xf4, 0x7f, 0xfe, 0x29, 0x5c, 0x39, 0x7c, 0xbd, 0x70, 0x82,
	0xd5, 0xc2, 0x09, 0xf8, 0x0e, 0xd9, 0xe2, 0x7d, 0x8b, 0x3c, 0xf6, 0xc2, 0xc0, 0x8e, 0x58, 0x18,
	0x87, 0xa4, 0xab, 0x39, 0xa6, 0x13, 0x20, 0x63, 0xbe, 0x7e, 0x11, 0xe1, 0x1c, 0xd3, 0x03, 0xd2,
	0x02, 0x33, 0xd8, 0x6e, 0x2c, 0xa3, 0x6f, 0x0c, 0xfe, 0xcd, 0x93, 0x25, 0xe9, 0x41, 0xfd, 0x98,
	0x63, 0x95, 0xd3, 0xed, 0x2c, 0xa6, 0x53, 0x68, 0x29, 0x35, 0x22, 0x7f, 0x4f, 0x2c, 0xa8, 0x6d,
	0x90, 0x73, 0xc7, 0x45, 0xcb, 0xec, 0x1b, 0x83, 0xfa, 0xfc, 0x18, 0x92, 0x4b, 0xa8, 0x32, 0xe4,
	0x5b, 0x3f, 0xb6, 0x2a, 0x69, 0x1d, 0x11, 0xd1, 0x2e, 0x74, 0x26, 0x2c, 0xdc, 0x71, 0xcc, 0x35,
	0x43, 0x97, 0xd0, 0xce, 0x1f, 0x24, 0x04, 0xb9, 0x23, 0xa3, 0x6f, 0xca, 0x1d, 0xc9, 0xf4, 0xb2,
	0x8e, 0x6e, 0x2a, 0x74, 0x17, 0x3a, 0xe3, 0x54, 0x9a, 0xbc, 0x14, 0x2a, 0x46, 0xf9, 0xf0, 0xa4,
	0xd8, 0x41, 0x4f, 0x21, 0x89, 0x88, 0x92, 0x9c, 0xc3, 0x0a, 0x99, 0xc0, 0x64, 0x31, 0x9d, 0x41,
	0x3b, 0x0f, 0xca, 0xe9, 0x65, 0xe8, 0x3a, 0x2e, 0x2b, 0x1d, 0x3f, 0x40, 0x7b, 0x8a, 0xb1, 0xe3,
	0xf9, 0xb8, 0x7a, 0xf6, 0x78, 0x5c, 0xa0, 0x5f, 0xfa, 0x65, 0xc0, 0x85, 0x9a, 0x93, 0xa0, 0x9f,
	0xa0, 0xb9, 0x12, 0x9b, 0xbe, 0xc7, 0xe3, 0x54, 0xcc, 0xc6, 0xe8, 0xc6, 0xd6, 0x39, 0x4a, 0xa9,
	0xa0, 0xa4, 0xfe, 0x41, 0xf7, 0x4f, 0x68, 0xca, 0xf5, 0xce, 0xca, 0x7d, 0x0d, 0x70, 0x5c, 0x67,
	0x92, 0x4b, 0x3b, 0xd2, 0x38, 0x4c, 0xed, 0x38, 0x2a, 0xea, 0x38, 0x46, 0xdf, 0x26, 0xd4, 0x66,
	0x0c, 0x31, 0x46, 0x46, 0x5c, 0x68, 0x48, 0x3e, 0x26, 0xf7, 0x5a, 0x05, 0x7e, 0xbf, 0x98, 0xde,
	0x6d, 0xb1, 0xcb, 0x91, 0xbf, 0xa7, 0x25, 0x12, 0xc1, 0x7f, 0xd5, 0xd1, 0xc4, 0xd6, 0xa6, 0x9f,
	0x7c, 0x13, 0xbd, 0x61, 0xe1, 0xfb, 0x19, 0x51, 0x75, 0xdd, 0x19, 0xe2, 0xc9, 0x77, 0x70, 0x86,
	0x78, 0xc2, 0xce, 0xb4, 0x44, 0xde, 0x72, 0x83, 0x1d, 0x16, 0xf3, 0x93, 0xa0, 0xdd, 0x15, 0xbc,
	0x9d, 0xb2, 0x26, 0x04, 0x5a, 0x5e, 0x68, 0xbb, 0x2c, 0x5a, 0xda, 0xf8, 0xe1, 0x6c, 0x22, 0x1f,
	0xf9, 0x6b, 0x35, 0xfd, 0xf1, 0x3d, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x97, 0xe3, 0x03, 0x7a,
	0x19, 0x05, 0x00, 0x00,
}
