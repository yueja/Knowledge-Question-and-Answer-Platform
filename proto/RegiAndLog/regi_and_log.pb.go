// Code generated by protoc-gen-go. DO NOT EDIT.
// source: regi_and_log.proto

package regi_and_log

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RegisteredUserRequest struct {
	Num                  string   `protobuf:"bytes,1,opt,name=num,proto3" json:"num,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisteredUserRequest) Reset()         { *m = RegisteredUserRequest{} }
func (m *RegisteredUserRequest) String() string { return proto.CompactTextString(m) }
func (*RegisteredUserRequest) ProtoMessage()    {}
func (*RegisteredUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_regi_and_log_d0f65bff9305500e, []int{0}
}
func (m *RegisteredUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisteredUserRequest.Unmarshal(m, b)
}
func (m *RegisteredUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisteredUserRequest.Marshal(b, m, deterministic)
}
func (dst *RegisteredUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisteredUserRequest.Merge(dst, src)
}
func (m *RegisteredUserRequest) XXX_Size() int {
	return xxx_messageInfo_RegisteredUserRequest.Size(m)
}
func (m *RegisteredUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisteredUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisteredUserRequest proto.InternalMessageInfo

func (m *RegisteredUserRequest) GetNum() string {
	if m != nil {
		return m.Num
	}
	return ""
}

func (m *RegisteredUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type RegisteredUserReply struct {
	Message              bool     `protobuf:"varint,1,opt,name=message,proto3" json:"message,omitempty"`
	Result               string   `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisteredUserReply) Reset()         { *m = RegisteredUserReply{} }
func (m *RegisteredUserReply) String() string { return proto.CompactTextString(m) }
func (*RegisteredUserReply) ProtoMessage()    {}
func (*RegisteredUserReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_regi_and_log_d0f65bff9305500e, []int{1}
}
func (m *RegisteredUserReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisteredUserReply.Unmarshal(m, b)
}
func (m *RegisteredUserReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisteredUserReply.Marshal(b, m, deterministic)
}
func (dst *RegisteredUserReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisteredUserReply.Merge(dst, src)
}
func (m *RegisteredUserReply) XXX_Size() int {
	return xxx_messageInfo_RegisteredUserReply.Size(m)
}
func (m *RegisteredUserReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisteredUserReply.DiscardUnknown(m)
}

var xxx_messageInfo_RegisteredUserReply proto.InternalMessageInfo

func (m *RegisteredUserReply) GetMessage() bool {
	if m != nil {
		return m.Message
	}
	return false
}

func (m *RegisteredUserReply) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type LoginUserRequest struct {
	Num                  string   `protobuf:"bytes,1,opt,name=num,proto3" json:"num,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginUserRequest) Reset()         { *m = LoginUserRequest{} }
func (m *LoginUserRequest) String() string { return proto.CompactTextString(m) }
func (*LoginUserRequest) ProtoMessage()    {}
func (*LoginUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_regi_and_log_d0f65bff9305500e, []int{2}
}
func (m *LoginUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginUserRequest.Unmarshal(m, b)
}
func (m *LoginUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginUserRequest.Marshal(b, m, deterministic)
}
func (dst *LoginUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginUserRequest.Merge(dst, src)
}
func (m *LoginUserRequest) XXX_Size() int {
	return xxx_messageInfo_LoginUserRequest.Size(m)
}
func (m *LoginUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginUserRequest proto.InternalMessageInfo

func (m *LoginUserRequest) GetNum() string {
	if m != nil {
		return m.Num
	}
	return ""
}

func (m *LoginUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginUserReply struct {
	Message              bool     `protobuf:"varint,1,opt,name=message,proto3" json:"message,omitempty"`
	Result               string   `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginUserReply) Reset()         { *m = LoginUserReply{} }
func (m *LoginUserReply) String() string { return proto.CompactTextString(m) }
func (*LoginUserReply) ProtoMessage()    {}
func (*LoginUserReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_regi_and_log_d0f65bff9305500e, []int{3}
}
func (m *LoginUserReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginUserReply.Unmarshal(m, b)
}
func (m *LoginUserReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginUserReply.Marshal(b, m, deterministic)
}
func (dst *LoginUserReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginUserReply.Merge(dst, src)
}
func (m *LoginUserReply) XXX_Size() int {
	return xxx_messageInfo_LoginUserReply.Size(m)
}
func (m *LoginUserReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginUserReply.DiscardUnknown(m)
}

var xxx_messageInfo_LoginUserReply proto.InternalMessageInfo

func (m *LoginUserReply) GetMessage() bool {
	if m != nil {
		return m.Message
	}
	return false
}

func (m *LoginUserReply) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*RegisteredUserRequest)(nil), "regi_and_log.RegisteredUserRequest")
	proto.RegisterType((*RegisteredUserReply)(nil), "regi_and_log.RegisteredUserReply")
	proto.RegisterType((*LoginUserRequest)(nil), "regi_and_log.LoginUserRequest")
	proto.RegisterType((*LoginUserReply)(nil), "regi_and_log.LoginUserReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	RegisteredUser(ctx context.Context, in *RegisteredUserRequest, opts ...grpc.CallOption) (*RegisteredUserReply, error)
	LoginUser(ctx context.Context, in *LoginUserRequest, opts ...grpc.CallOption) (*LoginUserReply, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) RegisteredUser(ctx context.Context, in *RegisteredUserRequest, opts ...grpc.CallOption) (*RegisteredUserReply, error) {
	out := new(RegisteredUserReply)
	err := c.cc.Invoke(ctx, "/regi_and_log.Greeter/RegisteredUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) LoginUser(ctx context.Context, in *LoginUserRequest, opts ...grpc.CallOption) (*LoginUserReply, error) {
	out := new(LoginUserReply)
	err := c.cc.Invoke(ctx, "/regi_and_log.Greeter/LoginUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	RegisteredUser(context.Context, *RegisteredUserRequest) (*RegisteredUserReply, error)
	LoginUser(context.Context, *LoginUserRequest) (*LoginUserReply, error)
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_RegisteredUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisteredUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).RegisteredUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/regi_and_log.Greeter/RegisteredUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).RegisteredUser(ctx, req.(*RegisteredUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_LoginUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).LoginUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/regi_and_log.Greeter/LoginUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).LoginUser(ctx, req.(*LoginUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "regi_and_log.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisteredUser",
			Handler:    _Greeter_RegisteredUser_Handler,
		},
		{
			MethodName: "LoginUser",
			Handler:    _Greeter_LoginUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "regi_and_log.proto",
}

func init() { proto.RegisterFile("regi_and_log.proto", fileDescriptor_regi_and_log_d0f65bff9305500e) }

var fileDescriptor_regi_and_log_d0f65bff9305500e = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0x4f, 0x4b, 0xc4, 0x30,
	0x10, 0xc5, 0xad, 0xc2, 0xfe, 0x19, 0x64, 0x29, 0x23, 0x4a, 0x29, 0x22, 0x5a, 0x2f, 0x9e, 0x7a,
	0xd0, 0x2f, 0x20, 0x0b, 0xb2, 0x07, 0x3d, 0x15, 0xbc, 0x78, 0x59, 0xa2, 0x1d, 0x42, 0x20, 0x6d,
	0xe2, 0x4c, 0x8a, 0xee, 0xd7, 0xf2, 0x13, 0x8a, 0x61, 0x5d, 0xb6, 0x8b, 0xee, 0xa1, 0xb7, 0xbc,
	0x97, 0xe4, 0xc7, 0x9b, 0x37, 0x80, 0x4c, 0xda, 0x2c, 0x55, 0x5b, 0x2f, 0xad, 0xd3, 0xa5, 0x67,
	0x17, 0x1c, 0x1e, 0x6f, 0x7b, 0xc5, 0x03, 0x9c, 0x56, 0xa4, 0x8d, 0x04, 0x62, 0xaa, 0x9f, 0x85,
	0xb8, 0xa2, 0xf7, 0x8e, 0x24, 0x60, 0x0a, 0x47, 0x6d, 0xd7, 0x64, 0xc9, 0x65, 0x72, 0x33, 0xad,
	0x7e, 0x8e, 0x98, 0xc3, 0xc4, 0x2b, 0x91, 0x0f, 0xc7, 0x75, 0x76, 0x18, 0xed, 0x8d, 0x2e, 0x16,
	0x70, 0xb2, 0x8b, 0xf1, 0x76, 0x85, 0x19, 0x8c, 0x1b, 0x12, 0x51, 0x9a, 0x22, 0x68, 0x52, 0xfd,
	0x4a, 0x3c, 0x83, 0x11, 0x93, 0x74, 0x36, 0xac, 0x51, 0x6b, 0x55, 0xdc, 0x43, 0xfa, 0xe4, 0xb4,
	0x69, 0x87, 0x47, 0x99, 0xc3, 0x6c, 0x8b, 0x30, 0x28, 0xc5, 0xed, 0x57, 0x02, 0xe3, 0x05, 0x13,
	0x05, 0x62, 0x7c, 0x81, 0x59, 0x7f, 0x34, 0xbc, 0x2e, 0x7b, 0xb5, 0xfe, 0xd9, 0x5f, 0x7e, 0xb5,
	0xff, 0x91, 0xb7, 0xab, 0xe2, 0x00, 0x1f, 0x61, 0xba, 0xc9, 0x8a, 0x17, 0xfd, 0x1f, 0xbb, 0x35,
	0xe4, 0xe7, 0xff, 0xde, 0x47, 0xd8, 0x1c, 0x21, 0x35, 0xae, 0xd4, 0xec, 0xdf, 0x4a, 0xfa, 0x54,
	0x8d, 0xb7, 0x24, 0xaf, 0xa3, 0xb8, 0xf3, 0xbb, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x12, 0xdb,
	0x10, 0xf0, 0x09, 0x02, 0x00, 0x00,
}
